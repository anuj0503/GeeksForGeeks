class Solution {
    static int[][] dp;
    static int shortestUnSub(String s, String t) {
        dp = new int[s.length() + 1][t.length() + 1];
        
        for(int i = 0; i <= s.length(); i++) Arrays.fill(dp[i], -1);
        
        int ans = uncommonSubSequence(0, 0, s, t);
        
        if(ans > 500)
            return -1;
            
        return ans;
    }
    
    static int uncommonSubSequence(int i, int j, String s, String t){
        if(i >= s.length()) return 501;
        
        if(j >= t.length()) return 1;
        
        if(dp[i][j] != -1)
            return dp[i][j];
            
        int k = j;
        
        for(;k < t.length(); k++){
            if(s.charAt(i) == t.charAt(k)) break;
        }
        
        if(k == t.length()) return 1;
        
        dp[i][j] =  Math.min(uncommonSubSequence(i + 1, j, s, t), 1 + uncommonSubSequence(i + 1, k + 1, s, t));
    
        return dp[i][j];
    }
};
